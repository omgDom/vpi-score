version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: vpi_auth
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  auth-service:
    build:
      context: ./backend/auth-service
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/vpi_auth
      - JWT_SECRET_KEY=your-secret-key-here
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  score-service:
    build:
      context: ./backend/score-service
      dockerfile: Dockerfile
    environment:
      - DB_HOST=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=vpi_scores
      - DB_PORT=5432
      - JWT_SECRET=your-secret-key-here
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      auth-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_AUTH_SERVICE_URL=http://localhost:8000
      - NEXT_PUBLIC_SCORE_SERVICE_URL=http://localhost:8080
    depends_on:
      auth-service:
        condition: service_healthy
      score-service:
        condition: service_healthy

volumes:
  postgres_data: 